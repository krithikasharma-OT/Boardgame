pipeline {
    agent {
        label 'RhelLocalVM'
    }

    tools{
        jdk 'MyJDK17'
        maven 'MyMaven3.9'
    }

    environment{
        SCANNER_HOME = tool 'MySonarQubeScanner'
        JAVA_HOME = tool('MyJDK17') // Ensures JAVA_HOME is set
        PATH = "${JAVA_HOME}/bin:${env.PATH}" // Adds Java to the PATH
        NVD_API_KEY = credentials('NVD_API_KEY') 
    }

    stages {
        stage('Code checkout'){
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/krithikasharma-OT/Boardgame.git'
            }
        }
    

        stage('Compile') {
            steps {
                sh "mvn compile"
            }
        }

        stage ('Trivy File sytem Scan') {
            steps {
                sh "trivy fs ."
            }
        }
        /*    
        stage('OWASP FS SCAN') {
            steps {
                dependencyCheck additionalArguments: '--scan .', nvdCredentialsId: 'NVD_API_KEY', odcInstallation: 'MyOWASP'
                    dependencyCheckPublisher pattern: '**/ /*dependency-check-report.xml '
            }
        }
        */

        stage('Sonar analysis') {
            steps {
                withSonarQubeEnv('SonarConf') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Board \
                        -Dsonar.sources=src \
                        -Dsonar.java.binaries=target/classes \
                        -Dsonar.projectKey=Board '''
                }
            }
        }

        stage('Code-Build'){
            steps{
                sh "mvn  package " /*-DskipTests=true*/
            }
        }

    stage('Deploy to nexus'){
        steps{
            configFileProvider([configFile(fileId: 'MyGlobalSettings', variable: 'MyMavenSettings')]) {
                sh "mvn -s $MyMavenSettings clean deploy"
            }
        }
    }
    
    

    stage('Build tag docker image'){
        steps{
            script{
                
                withDockerRegistry(credentialsId: 'Docker-Cred', toolName: 'docker') {
                    sh "docker build -t  boardgame:v1 -f Dockerfile ."
                    sh "docker tag boardgame:v1 krithikasharma/boardgame:v1"
                }
            }
        }
    }
    
    stage(' Push docker image'){
        steps{
            script{
                withDockerRegistry(credentialsId: 'Docker-Cred', toolName: 'docker'){
                   sh "docker push krithikasharma/boardgame:v1"
                }
            }
        }
    }

    stage(' Deploy Application container'){
        steps{
            script{
                withDockerRegistry(credentialsId: 'Docker-Cred', toolName: 'docker'){
                    sh "docker run -d --name boardgame -p 8090:8090 krithikasharma/boardgame:v1"
                }
            }
        }
    }
}
}
